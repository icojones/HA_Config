  - platform: metoffice
    api_key: !secret metoffice_key
    monitored_conditions:
      - weather
      - temperature
      - feels_like_temperature
      - wind_speed
      - wind_direction
      - wind_gust
      - visibility
      - visibility_distance
      - uv
      - precipitation
      - humidity
  # Weather Met Office
  - platform: rfxtrx
    automatic_add: true
  # Dark Sky
  - platform: darksky
    name: Dark Sky Forecast
    api_key: !secret darksky_key
    forecast: 
    #  - 1
    #  - 2
    monitored_conditions:
      - summary
      - icon
      - nearest_storm_distance
      - precip_type
      - precip_intensity
      - precip_probability
      - temperature
      - apparent_temperature
      #- dew_point
      - wind_speed
      - wind_bearing
      - cloud_cover
      - humidity
      - pressure
      - visibility
      #- ozone
      #- minutely_summary
      - hourly_summary
      - daily_summary
      - temperature_max
      - temperature_min
      - apparent_temperature_max
      - apparent_temperature_min
      - precip_intensity_max
      #- uv_index
    units: uk2
    update_interval: 
      minutes: 3
  # Moon    
  - platform: moon
  # Lets Encrypt Cert Check
  - platform: command_line
    name: SSL cert expiry
    unit_of_measurement: days
    scan_interval: 10800
    command: "ssl-cert-check -b -c /etc/letsencrypt/live/treetops108.duckdns.org/cert.pem | awk '{ print $NF }'"
  # CPU temperature
  - platform: command_line
    name: CPU Temperature
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    # If errors occur, remove degree symbol below
    unit_of_measurement: "°C"
    value_template: '{{ value | multiply(0.001) }}'
  - platform: template
    sensors:
      sonos_kitchen_state:
        value_template: '{{ states("media_player.kitchen") }}'
        friendly_name: Kitchen
      sonos_lounge_state:
        value_template: '{{ states("media_player.lounge") }}'
        friendly_name: Lounge
      sonos_ensuite_state:
        value_template: '{{ states("media_player.bathroom_speaker") }}'
        friendly_name: En-Suite
      sonos_garage_state:
        value_template: '{{ states("media_player.garage") }}'
        friendly_name: Garage
      genius_ensuite:
        value_template: >-
          {% if is_state('input_boolean.harry_room_warm', 'on') %}
            Warm
          {% else %}
            Cold
          {% endif %}
        friendly_name: En-Suite
      genius_james:
        value_template: >-
          {% if is_state('input_boolean.harry_room_warm', 'on') %}
            Warm
          {% else %}
            Cold
          {% endif %}
        friendly_name: James' Room
      genius_harry:
        friendly_name: Harry’s Room
        value_template: >-
          {% if is_state('input_boolean.harry_room_warm', 'on') %}
            Warm
          {% else %}
            Cold
          {% endif %}
      genius_bathroom:
        value_template: >-
          {% if is_state('input_boolean.bathroom_warm', 'on') %}
            Warm
          {% else %}
            Cold
          {% endif %}
        friendly_name: Bathroom
      genius_bathroom_heating:
        value_template: >-
          {% if is_state('input_boolean.bathroom_heating', 'on') %}
            Heating
          {% else %}
            Not Heating
          {% endif %}
        friendly_name: Bathroom Heating
      genius_harry_room_heating:
        value_template: >-
          {% if is_state('input_boolean.harry_room_heating', 'on') %}
            Heating
          {% else %}
            Not Heating
          {% endif %}
        friendly_name: Harry's Room Heating
      genius_james_room_heating:
        value_template: >-
          {% if is_state('input_boolean.james_room_heating', 'on') %}
            Heating
          {% else %}
            Not Heating
          {% endif %}
        friendly_name: James' Room Heating
      garage_left:
        value_template: '{% if is_state("input_boolean.garage_left", "on") %}Open{% else %}Closed{% endif %}'
        friendly_name: 'Left'
      garage_right:
        value_template: '{% if is_state("cover.garage_door", "open") %}Open{% else %}Closed{% endif %}'
        friendly_name: 'Right'
      batt_garage_left:
        friendly_name: 'Sensor Battery'
        value_template: '{{ states.zwave.garage_left.attributes.battery_level }}'
        unit_of_measurement: '%' 
      # batt_garage_right:
      #   friendly_name: 'Sensor Battery'
      #   value_template: '{{ states.zwave.garage_right.attributes.battery_level }}'
      #   unit_of_measurement: '%' 
  # Speedtest Network Speed
  - platform: speedtest
    monitored_conditions:
      - ping
      - download
      - upload
  # HA uptime
  - platform: uptime
    name: HA Uptime
    unit_of_measurement: hours
